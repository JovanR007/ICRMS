@model FinalCapstone.Rubric

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2></h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Edit a Rubric</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.rubric_id)

    <div class="form-group">
        @Html.LabelFor(model => model.course_id, "Course", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <h1 style="font-size:30px; color:black">
                @Html.DisplayFor(model => model.Course.courseno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.course_id, "", new { @class = "text-danger" })
            </h1>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.outputs, "Output", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.outputs, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.outputs, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.weight, "Weight", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.weight, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.weight, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

    <div>
        @Html.ActionLink("Back to List", "Index", new { id = ViewBag.CourseId })

    </div>
